{"version":3,"sources":["redux/todoSlice.js","components/Cell/Cell.jsx","ticTacToeRedux/slices/cells/cells.js","ticTacToeRedux/slices/switchSymbols/switchSymbols.js","logic/checkWin/filterBySymbol/filterBySymbol.js","logic/checkWin/extractIndices/extractIndices.js","logic/checkWin/checkWin.js","logic/checkWin/winPatterns/winPatterns.js","components/Field/Field.jsx","App.js","ticTacToeRedux/store/reducer.js","ticTacToeRedux/store/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","resp","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","toggleComplete","map","deleteTodo","filter","extraReducers","fulfilled","push","index","findIndex","actions","Cell","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","fontFamily","fontWeight","fontSize","display","justifyContent","alignItems","cellsSlice","value","addTic","cells","cell","switchSymbolsSlice","switchSymbols","currentSymbol","_","filterBySymbol","prop","symbol","propEq","extractIndices","arr","obj","checkWin","side","gameSituation","winPatterns","situationForSide","join","any","winPattern","includes","CSSGrid","useSelector","dispatch","useDispatch","Box","sx","gridTemplateColumns","gap","gridTemplateRows","onClick","console","log","App","className","combineReducers","cellsReducer","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9fd64861.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n\t'todos/getTodosAsync',\r\n\tasync () => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos');\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todos = await resp.json();\r\n\t\t\treturn { todos };\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const addTodoAsync = createAsyncThunk(\r\n\t'todos/addTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ title: payload.title }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n\t'todos/completeTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ completed: payload.completed }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n\t'todos/deleteTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos', {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ title: payload.title }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const todoSlice = createSlice({\r\n    name: \"todos\",\r\n    initialState: [\r\n        { id: 1, title: \"todo1\", completed: false },\r\n        { id: 2, title: \"todo2\", completed: false },\r\n        { id: 3, title: \"todo3\", completed: true },\r\n        { id: 4, title: \"todo4\", completed: false },\r\n        { id: 5, title: \"todo5\", completed: false },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            const todo = {\r\n                id: action.payload.id,\r\n                title: action.payload.title,\r\n                completed: false,\r\n            }\r\n            return [...state, todo]\r\n        },\r\n        toggleComplete: (state, action) => {\r\n            const newState = state.map((todo) => {\r\n                if (todo.id === action.payload.id) {\r\n                    return { ...todo, completed: action.payload.completed }\r\n                } else {\r\n\r\n                    return todo\r\n                }\r\n            })\r\n\r\n            return newState\r\n        },\r\n        deleteTodo: (state, action) => {\r\n            return state.filter((todo) => todo.id !== action.payload.id)\r\n        },\r\n    },\r\n    extraReducers: {\r\n\t\t[getTodosAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn action.payload.todos;\r\n\t\t},\r\n        [addTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tstate.push(action.payload.todo)\r\n\t\t},\r\n        [toggleCompleteAsync.fulfilled]: (state, action) => {\r\n\t\t\tconst index = state.findIndex(\r\n\t\t\t\t(todo) => todo.id === action.payload.todo.id\r\n\t\t\t)\r\n\t\t\tstate[index].completed = action.payload.todo.completed;\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer\r\n","import { styled } from \"@mui/material/styles\"\r\nimport Paper from \"@mui/material/Paper\"\r\n\r\nconst Cell = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    fontFamily: \"inherit\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"3em\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n}))\r\n\r\nexport default Cell","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const cellsSlice = createSlice({\r\n    name: \"cells\",\r\n    initialState: [\r\n        { index: 0, value: null },\r\n        { index: 1, value: null },\r\n        { index: 2, value: null },\r\n        { index: 3, value: null },\r\n        { index: 4, value: null },\r\n        { index: 5, value: null },\r\n        { index: 6, value: null },\r\n        { index: 7, value: null },\r\n        { index: 8, value: null },\r\n    ],\r\n    reducers: {\r\n        addTic: (cells, action) => {\r\n            return cells.map((cell) => {\r\n\r\n                return cell.index === action.payload.index\r\n                    ? { ...cell, value: action.payload.value }\r\n                    : cell\r\n            })\r\n        },\r\n    },\r\n})\r\n\r\nexport const { addTic } = cellsSlice.actions\r\n\r\nexport default cellsSlice.reducer\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const switchSymbolsSlice = createSlice({\r\n    name: \"switchSymbol\",\r\n    initialState: '✖',\r\n    reducers: {\r\n        switchSymbols: (currentSymbol, _) => {\r\n            return currentSymbol === '✖' ? '〇' : '✖'\r\n        },\r\n    },\r\n})\r\n\r\nexport const { switchSymbols } = switchSymbolsSlice.actions\r\n\r\nexport default switchSymbolsSlice.reducer\r\n","import { filter, propEq } from \"ramda\"\r\n\r\nconst filterBySymbol = (prop) => (symbol) => (cells) => filter(propEq(prop, symbol))(cells)\r\n\r\nexport default filterBySymbol\r\n","import { map } from \"ramda\"\r\n\r\nconst extractIndices = prop => arr => map(obj => obj[prop])(arr)\r\n\r\nexport default extractIndices","import {  any, join, includes } from \"ramda\"\r\nimport filterBySymbol from './filterBySymbol/filterBySymbol'\r\nimport extractIndices from './extractIndices/extractIndices'\r\n\r\nconst checkWin = side => gameSituation => winPatterns => {\r\n    const situationForSide = join('')(extractIndices('index')(filterBySymbol('value')(side)(gameSituation)))\r\n\r\n    return any(winPattern => includes(join('')(winPattern), situationForSide))(winPatterns)\r\n}\r\n\r\nexport default checkWin","const winPatterns = [\r\n                [0, 1, 2],\r\n                [3, 4, 5],\r\n                [6, 7, 8],\r\n\r\n                [0, 4, 8],\r\n                [2, 4, 6],\r\n                \r\n                [0, 3, 6],\r\n                [1, 4, 7],\r\n                [2, 5, 8]\r\n\r\n]\r\n\r\nexport default winPatterns","import * as React from \"react\"\r\nimport Box from \"@mui/material/Box\"\r\nimport Cell from '../Cell/Cell'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n// import { getTodosAsync } from '../redux/todoSlice'\r\nimport { addTic } from '../../ticTacToeRedux/slices/cells/cells'\r\n\r\nimport { switchSymbols } from '../../ticTacToeRedux/slices/switchSymbols/switchSymbols'\r\nimport checkWin from '../../logic/checkWin/checkWin'\r\nimport winPatterns  from '../../logic/checkWin/winPatterns/winPatterns'\r\n\r\nexport default function CSSGrid() {\r\n\r\n    const cells = useSelector((state) => state.cells)\r\n    const currentSymbol = useSelector((state) => state.switchSymbols)\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleCellClick = (index) => {\r\n        dispatch(addTic({ index, value: currentSymbol }))\r\n        dispatch(switchSymbols({}))      \r\n        console.log(`clicked  ${index}`)\r\n        console.log(checkWin('✖')(cells)(winPatterns))\r\n        console.log(checkWin('〇')(cells)(winPatterns))\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                backgroundColor: \"primary.dark\",\r\n                display: \"grid\",\r\n                justifyContent: \"center\",\r\n                padding: \"50px\",\r\n            }}\r\n        >\r\n            <Box\r\n                display=\"grid\"\r\n                gridTemplateColumns=\"repeat(3, 100px)\"\r\n                gap={1}\r\n                gridTemplateRows=\"repeat(3, 100px)\"\r\n            >\r\n                {cells.map((cell) => (\r\n                    <Cell onClick={() => handleCellClick(cell.index)}>{cell.value}</Cell>\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport AddTodoForm from \"./components/AddTodoForm\"\r\nimport TodoList from \"./components/TodoList\"\r\nimport TotalCompleteItems from \"./components/TotalCompleteItems\"\r\nimport Field from \"./components/Field/Field\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container bg-white p-4 mt-5\">\r\n            {/* <h1>My Todo List</h1>\r\n            <AddTodoForm />\r\n            <TodoList />\r\n            <TotalCompleteItems /> */}\r\n            <Field/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from \"@reduxjs/toolkit\"\r\n\r\nimport cellsReducer from '../slices/cells/cells'\r\nimport switchSymbols from '../slices/switchSymbols/switchSymbols'\r\n\r\nexport default combineReducers({\r\n    cells: cellsReducer,\r\n    switchSymbols: switchSymbols\r\n\r\n})","import { configureStore } from \"@reduxjs/toolkit\"\r\n\r\nimport reducer from \"./reducer\"\r\n\r\nexport default configureStore({ reducer })\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n//import store from \"./redux/store\"\r\nimport store  from './ticTacToeRedux/store/store'\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}